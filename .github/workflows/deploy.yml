name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: labortrack_test
          POSTGRES_USER: labortrack_test
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: pdo, pdo_pgsql, pgsql, mbstring, zip, exif, pcntl, bcmath
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress --optimize-autoloader

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install Node dependencies
        run: yarn install --frozen-lockfile

      - name: Prepare Laravel application
        run: |
          cp .env.example .env
          sed -i 's/DB_CONNECTION=sqlite/DB_CONNECTION=pgsql/' .env
          sed -i 's/# DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
          sed -i 's/# DB_PORT=3306/DB_PORT=5432/' .env
          sed -i 's/# DB_DATABASE=laravel/DB_DATABASE=labortrack_test/' .env
          sed -i 's/# DB_USERNAME=root/DB_USERNAME=labortrack_test/' .env
          sed -i 's/# DB_PASSWORD=/DB_PASSWORD=password/' .env
          php artisan key:generate

      - name: Run migrations
        run: php artisan migrate --force

      - name: Clear caches
        run: |
          php artisan config:clear
          php artisan cache:clear

      - name: Run tests
        run: composer test

  build-and-deploy:
    name: Build & Deploy
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install Node dependencies
        run: yarn install --frozen-lockfile

      - name: Build frontend assets
        run: yarn build

      - name: Create deployment artifact
        run: |
          mkdir -p deployment
          tar -czf deployment/app.tar.gz \
            --exclude=node_modules \
            --exclude=.git \
            --exclude=.github \
            --exclude=tests \
            --exclude=storage/logs \
            --exclude=storage/framework/cache \
            --exclude=storage/framework/sessions \
            --exclude=storage/framework/views \
            --exclude=.env \
            .

      - name: Deploy to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "deployment/app.tar.gz"
          target: "/tmp/labortrack-deployment"

      - name: Execute deployment script
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script_stop: true
          script: |
            cd ${{ secrets.VPS_DEPLOY_PATH }}
            bash deploy.sh

